import React, { useState } from 'react';
import { 
  MapPin, 
  Home, 
  Bed, 
  Bath, 
  Square, 
  ChevronRight, 
  Menu, 
  X, 
  Phone, 
  Mail, 
  Instagram, 
  Facebook 
} from 'lucide-react';

const ApartmentListing = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [activeTab, setActiveTab] = useState('overview');
  const [selectedUnit, setSelectedUnit] = useState(null);
  
  // Reference for units section
  const unitsRef = React.useRef(null);
  const neighborhoodRef = React.useRef(null);

  // Function to scroll to units section
  const scrollToSection = (section) => {
    setActiveTab(section);
    
    // Use setTimeout to ensure the state is updated before scrolling
    setTimeout(() => {
      if (section === 'units' && unitsRef.current) {
        unitsRef.current.scrollIntoView({ behavior: 'smooth' });
      } else if (section === 'neighborhood' && neighborhoodRef.current) {
        neighborhoodRef.current.scrollIntoView({ behavior: 'smooth' });
      }
    }, 100);
  };

  // Sample data
  const units = [
    {
      id: 101,
      title: 'Unit 101',
      bedrooms: 1,
      bathrooms: 1,
      sqft: 750,
      price: 1500,
      status: 'available',
      description: 'Modern 1 bedroom unit with great natural light and hardwood floors throughout. Recently updated kitchen with stainless steel appliances.',
      image: '/api/placeholder/400/320',
      features: ['Hardwood Floors', 'Stainless Appliances', 'Granite Counters', 'Large Windows']
    },
    {
      id: 102,
      title: 'Unit 102',
      bedrooms: 2,
      bathrooms: 1,
      sqft: 950,
      price: 1950,
      status: 'available',
      description: 'Spacious 2 bedroom corner unit with bright windows and updated fixtures. Enjoy extra storage space and a dedicated dining area.',
      image: '/api/placeholder/400/320',
      features: ['Corner Unit', 'Updated Fixtures', 'Dining Area', 'Extra Storage']
    },
    {
      id: 201,
      title: 'Unit 201',
      bedrooms: 2,
      bathrooms: 2,
      sqft: 1100,
      price: 2200,
      status: 'unavailable',
      description: 'Luxury 2 bedroom, 2 bath unit with premium finishes and spacious living area. Master suite includes walk-in closet and en-suite bathroom.',
      image: '/api/placeholder/400/320',
      features: ['Premium Finishes', 'Walk-in Closet', 'En-suite Bathroom', 'Spacious Layout']
    }
  ];

  // Add photos to each unit
  const unitsWithPhotos = units.map(unit => {
    return {
      ...unit,
      photos: [
        unit.image,
        '/api/placeholder/400/320',
        '/api/placeholder/400/320',
        '/api/placeholder/400/320'
      ]
    };
  });

  // Toggle mobile menu
  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header/Navigation */}
      <header className="bg-white shadow-sm sticky top-0 z-50">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-16">
            <a href="#" className="text-2xl font-bold text-orange-500">ApartmentsATL</a>
            
            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center space-x-8">
              <a href="#" className="text-gray-700 hover:text-orange-500 font-medium">Home</a>
              <a href="#" className="text-gray-700 hover:text-orange-500 font-medium">Apartments</a>
              <a href="#" className="text-gray-700 hover:text-orange-500 font-medium">Neighborhoods</a>
              <a href="#" className="text-gray-700 hover:text-orange-500 font-medium">Contact</a>
              <button className="bg-orange-500 text-white px-4 py-2 rounded font-medium hover:bg-orange-600 transition">
                Resident Portal
              </button>
            </nav>
            
            {/* Mobile Menu Button */}
            <button className="md:hidden" onClick={toggleMenu}>
              {isMenuOpen ? <X /> : <Menu />}
            </button>
          </div>
        </div>
        
        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="md:hidden bg-white shadow-lg rounded-b-lg">
            <div className="px-4 py-4 space-y-4">
              <a href="#" className="block text-gray-700 hover:text-orange-500 font-medium">Home</a>
              <a href="#" className="block text-gray-700 hover:text-orange-500 font-medium">Apartments</a>
              <a href="#" className="block text-gray-700 hover:text-orange-500 font-medium">Neighborhoods</a>
              <a href="#" className="block text-gray-700 hover:text-orange-500 font-medium">Contact</a>
              <button className="w-full bg-orange-500 text-white px-4 py-2 rounded font-medium hover:bg-orange-600 transition">
                Resident Portal
              </button>
            </div>
          </div>
        )}
      </header>
      
      {/* Hero Section */}
      <section className="relative">
        <div className="h-64 bg-gray-300 bg-center bg-cover" style={{ backgroundImage: "url('/api/placeholder/1200/500')" }}>
          <div className="absolute inset-0 bg-black bg-opacity-40"></div>
          <div className="absolute bottom-0 left-0 right-0 p-6 md:p-10 text-white">
            <div className="container mx-auto">
              <div className="flex flex-wrap items-center mb-2">
                <span className="px-3 py-1 bg-orange-500 text-white rounded-full text-sm font-semibold mr-2 mb-2">
                  Now Leasing
                </span>
                <span className="flex items-center px-3 py-1 bg-white bg-opacity-20 backdrop-blur-sm rounded-full text-sm mr-2 mb-2">
                  <MapPin size={14} className="mr-1" /> Midtown, Atlanta
                </span>
              </div>
              
              <h1 className="text-2xl md:text-3xl font-bold mb-2 drop-shadow-md">
                253 14th St NE
              </h1>
              
              <p className="text-lg mb-2 drop-shadow-sm">
                253 14th St NE, Atlanta, GA 30309
              </p>
            </div>
          </div>
        </div>
      </section>
      
      {/* Quick Info Tabs */}
      <section className="bg-white shadow-md">
        <div className="container mx-auto">
          <div className="flex overflow-x-auto">
            <button 
              className={`px-6 py-4 text-sm font-medium border-b-2 flex-1 text-center whitespace-nowrap
                ${activeTab === 'overview' ? 'border-orange-500 text-orange-500' : 'border-transparent text-gray-600 hover:text-orange-500'}`}
              onClick={() => scrollToSection('overview')}
            >
              Overview
            </button>
            <button 
              className={`px-6 py-4 text-sm font-medium border-b-2 flex-1 text-center whitespace-nowrap
                ${activeTab === 'units' ? 'border-orange-500 text-orange-500' : 'border-transparent text-gray-600 hover:text-orange-500'}`}
              onClick={() => scrollToSection('units')}
            >
              Units
            </button>
            <button 
              className={`px-6 py-4 text-sm font-medium border-b-2 flex-1 text-center whitespace-nowrap
                ${activeTab === 'neighborhood' ? 'border-orange-500 text-orange-500' : 'border-transparent text-gray-600 hover:text-orange-500'}`}
              onClick={() => scrollToSection('neighborhood')}
            >
              Neighborhood
            </button>
          </div>
        </div>
      </section>
      
      {/* Property Description Section */}
      <section className="py-8 bg-white">
        <div className="container mx-auto px-4">
          <h2 className="text-2xl font-bold mb-6 pb-2 border-b border-gray-200">About This Property</h2>
          <p className="text-gray-700 mb-6 leading-relaxed">
            Charming apartments near Piedmont Park. Prime location on quiet 14th Street, just steps
            from Atlanta's largest greenspace and the bustling Midtown Mile. Walking distance to the
            High Museum and Colony Square's shopping and dining.
          </p>
          
          <div className="bg-gray-50 p-6 rounded-lg mb-8">
            <h3 className="text-xl font-bold mb-4">Property Details</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div>
                <p className="text-gray-500 text-sm mb-1">Property Type</p>
                <p className="font-semibold">Multi Family</p>
              </div>
              <div>
                <p className="text-gray-500 text-sm mb-1">Year Built</p>
                <p className="font-semibold">1930 (Renovated)</p>
              </div>
              <div>
                <p className="text-gray-500 text-sm mb-1">Units</p>
                <p className="font-semibold">3 Units</p>
              </div>
              <div>
                <p className="text-gray-500 text-sm mb-1">Status</p>
                <p className="font-semibold text-green-600">Available</p>
              </div>
            </div>
          </div>
          
          <div className="mb-8">
            <h3 className="text-xl font-bold mb-4">Property Highlights</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="flex items-center">
                <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center text-orange-500 mr-3">
                  <MapPin size={20} />
                </div>
                <div>
                  <p className="font-medium">Prime Midtown Location</p>
                  <p className="text-sm text-gray-500">Steps from Piedmont Park</p>
                </div>
              </div>
              <div className="flex items-center">
                <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center text-orange-500 mr-3">
                  <Home size={20} />
                </div>
                <div>
                  <p className="font-medium">Historic Building (1930)</p>
                  <p className="text-sm text-gray-500">With modern renovations</p>
                </div>
              </div>
              <div className="flex items-center">
                <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center text-orange-500 mr-3">
                  <MapPin size={20} />
                </div>
                <div>
                  <p className="font-medium">Near Cultural Attractions</p>
                  <p className="text-sm text-gray-500">High Museum, theaters, and more</p>
                </div>
              </div>
              <div className="flex items-center">
                <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center text-orange-500 mr-3">
                  <Home size={20} />
                </div>
                <div>
                  <p className="font-medium">Excellent Transit</p>
                  <p className="text-sm text-gray-500">Walk Score 88, Transit Score 75</p>
                </div>
              </div>
            </div>
          </div>
          
          <div className="flex flex-wrap gap-3 mb-4">
            <button className="bg-orange-500 text-white px-5 py-2 rounded font-medium hover:bg-orange-600 transition inline-flex items-center">
              Contact Us
            </button>
          </div>
        </div>
      </section>
      
      {/* Units Section */}
      <section ref={unitsRef} className="py-8 bg-gray-50">
        <div className="container mx-auto px-4">
          <h2 className="text-2xl font-bold mb-6">Units</h2>
          <p className="text-gray-700 mb-6">3 units at 253 14th St NE</p>
          
          {/* Unit Cards */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {unitsWithPhotos.map(unit => (
              <div key={unit.id} className="bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:-translate-y-1 hover:shadow-lg">
                <div className="relative">
                  <img src={unit.image} alt={unit.title} className="w-full h-48 object-cover" />
                  <div className={`absolute top-3 right-3 px-2 py-1 rounded text-xs font-semibold uppercase ${unit.status === 'available' ? 'bg-green-500 text-white' : 'bg-gray-500 text-white'}`}>
                    {unit.status}
                  </div>
                </div>
                
                <div className="p-6">
                  <div className="flex justify-between items-start mb-2">
                    <h3 className="text-xl font-bold">{unit.title}</h3>
                    <div className="text-xl font-bold text-orange-500">${unit.price}<span className="text-sm text-gray-500 font-normal">/mo</span></div>
                  </div>
                  
                  <div className="flex space-x-4 mb-4">
                    <div className="flex items-center text-gray-700">
                      <Bed size={16} className="mr-1" />
                      <span>{unit.bedrooms} {unit.bedrooms === 1 ? 'Bed' : 'Beds'}</span>
                    </div>
                    <div className="flex items-center text-gray-700">
                      <Bath size={16} className="mr-1" />
                      <span>{unit.bathrooms} {unit.bathrooms === 1 ? 'Bath' : 'Baths'}</span>
                    </div>
                    <div className="flex items-center text-gray-700">
                      <Square size={16} className="mr-1" />
                      <span>{unit.sqft} sqft</span>
                    </div>
                  </div>
                  
                  <p className="text-gray-600 text-sm mb-4 line-clamp-2">{unit.description}</p>
                  
                  {/* Unit Features */}
                  <div className="mb-4">
                    <div className="flex flex-wrap gap-2">
                      {unit.features.slice(0, 2).map((feature, index) => (
                        <span key={index} className="bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full">
                          {feature}
                        </span>
                      ))}
                    </div>
                  </div>
                  
                  <div className="flex space-x-2">
                    <button className={`flex-1 px-4 py-2 rounded font-medium text-center ${unit.status === 'available' ? 'bg-orange-500 text-white hover:bg-orange-600' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}>
                      {unit.status === 'available' ? 'Contact Us' : 'Unavailable'}
                    </button>
                    <button 
                      className="px-4 py-2 rounded font-medium border border-orange-500 text-orange-500 hover:bg-orange-50"
                      onClick={() => setSelectedUnit(unit)}
                    >
                      Details
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          {/* Photo Gallery Modal */}
          {selectedUnit && (
            <div className="fixed inset-0 bg-black bg-opacity-80 z-50 flex items-center justify-center p-4">
              <div className="bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto">
                <div className="p-4 border-b flex justify-between items-center">
                  <h3 className="text-xl font-bold">{selectedUnit.title} Photo Gallery</h3>
                  <button 
                    className="text-gray-500 hover:text-gray-700"
                    onClick={() => setSelectedUnit(null)}
                  >
                    <X size={24} />
                  </button>
                </div>
                
                <div className="p-6">
                  <img 
                    src={selectedUnit.image} 
                    alt={selectedUnit.title} 
                    className="w-full h-64 object-cover rounded-lg mb-4"
                  />
                  
                  <div className="grid grid-cols-3 gap-2">
                    {selectedUnit.photos.map((photo, index) => (
                      <img 
                        key={index}
                        src={photo} 
                        alt={`${selectedUnit.title} - Photo ${index + 1}`}
                        className="w-full h-24 object-cover rounded"
                      />
                    ))}
                  </div>
                  
                  <div className="mt-6 border-t pt-6">
                    <h4 className="font-bold text-lg mb-2">{selectedUnit.title} - ${selectedUnit.price}/month</h4>
                    <p className="text-gray-700 mb-4">{selectedUnit.description}</p>
                    
                    <h4 className="font-semibold mb-2">Unit Features:</h4>
                    <ul className="list-disc pl-5 mb-6">
                      {selectedUnit.features.map((feature, index) => (
                        <li key={index} className="text-gray-700">{feature}</li>
                      ))}
                    </ul>
                    
                    <div className="flex space-x-4">
                      <button 
                        className="px-4 py-2 rounded font-medium border border-gray-300 text-gray-700 hover:bg-gray-50"
                        onClick={() => setSelectedUnit(null)}
                      >
                        Close
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      </section>
      
      {/* Removed sticky contact button as requested */}
    </div>
  );
};

export default ApartmentListing;